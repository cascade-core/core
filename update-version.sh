#!/bin/sh
#
# update-version.sh - Execute this file from your post-checkout hook.
# 
# Copyright (c) 2010, Josef Kufner  <jk@frozen-doe.net>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the author nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

get_version()
{
	git describe --tag --match "v[0-9]*"
}

get_date()
{
	git log -n 1 --pretty='%ai'
}

get_origin()
{
	git config --get 'remote.origin.url'
}

print_version()
{
	if [ -d "$2" ]
	then
		cd "$2"

		echo "[$1]"
		echo "version = \"`get_version`\""
		echo "date    = \"`get_date`\""
		echo "origin  = \"`get_origin`\""
		echo

		cd "$OLDPWD"
	fi
}


# go to web root
while ! [ -d 'core/' ] && ! [ -d 'app/' ] && [ `pwd` != '/' ]
do
	cd ..
done
unset GIT_DIR

if ! [ -d 'core/' ] || ! [ -d 'app/' ] || [ `pwd` = '/' ]
then
	echo -n 'Error: There is no "core" and/or "app" direcotry at ' >&2
	pwd >&2
	exit
fi

# get versions
(
cat <<EOF
;<?php echo "<pre style=\"margin:0;\">\n"; ?>
;
; Version info - generated by git hooks or core/version module
;
;<?php
;	\$v = parse_ini_file(__FILE__, TRUE);
;	foreach(\$v as \$s => \$vv) {
;		printf("\n; %-14s %-20s %s", \$s, \$vv["version"], \$vv["date"]);
;	}
;	printf("\n;\n;</pre>\n");
;	exit(); __HALT_COMPILER();
;?>

EOF

	print_version app  ./
	print_version core ./core

	if [ -d "./plugin" ]
	then
		for plugin in ./plugin/*/
		do
			print_version "plugin:`basename $plugin`" "$plugin"
		done
	fi

	echo "; vim"":filetype=dosini:"

) > var/version.ini.php

